$date
	Tue Sep 19 20:28:44 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_adder_subtractor $end
$var wire 2 ! sum [1:0] $end
$var wire 2 " sub [1:0] $end
$var wire 1 # car $end
$var wire 1 $ borr $end
$var reg 2 % a [1:0] $end
$var reg 2 & b [1:0] $end
$var reg 1 ' c $end
$scope module x $end
$var wire 2 ( a [1:0] $end
$var wire 2 ) b [1:0] $end
$var wire 1 $ borrow $end
$var wire 1 ' c $end
$var wire 1 # carry $end
$var wire 2 * sum [1:0] $end
$var wire 2 + subtractor_sub [1:0] $end
$var wire 1 , subtractor_borrow $end
$var wire 2 - sub [1:0] $end
$var wire 2 . adder_sum [1:0] $end
$var wire 1 / adder_carry $end
$scope module add_inst $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 sum $end
$var wire 1 / carry $end
$upscope $end
$scope module sub_inst $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 sub $end
$var wire 1 , borr $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#20000
$dumpvars
05
14
13
02
11
10
1/
b0 .
b0 -
0,
b0 +
b0 *
b11 )
b1 (
0'
b11 &
b1 %
0$
1#
b0 "
b0 !
$end
